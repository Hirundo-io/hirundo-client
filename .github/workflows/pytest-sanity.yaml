name: Run sanity tests with PyTest

on:
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pytest_sanity:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "pypy3.9", "pypy3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies on Linux and macOS
        if: runner.os != 'Windows'
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          source .venv/bin/activate
          pip install -r dev-requirements.txt
      - name: Run commands on Windows
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade 'pip>=24.1.2'
          python -m venv .venv
          .venv\Scripts\activate
          python -m pip install -r dev-requirements.txt
      - name: Run PyTest on Linux and macOS
        if: runner.os != 'Windows'
        run: .venv/bin/pytest
        env:
          API_HOST: ${{ secrets.API_HOST }}
          API_KEY: ${{ secrets.API_KEY }}
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          UNIQUE_ID: ${{ matrix.os }}-${{ matrix.python-version }}-${{ github.run_number }}
          FULL_TEST: ${{ (matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9') && 'true' || 'false' }}
      - name: Run PyTest on Windows
        if: runner.os == 'Windows'
        run: .venv/Scripts/pytest
        env:
          API_HOST: ${{ secrets.API_HOST }}
          API_KEY: ${{ secrets.API_KEY }}
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          UNIQUE_ID: ${{ matrix.os }}-${{ matrix.python-version }}-${{ github.run_number }}
          FULL_TEST: false
