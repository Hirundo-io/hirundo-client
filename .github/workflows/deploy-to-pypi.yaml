name: Release new version of package and push package to PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release. Must be a valid version number; x is forbidden'
        required: true
        default: '0.1.x'
      message:
        description: 'Message to attach to the release'
        required: false
        default: "Release notes \n"
      test:
        description: 'Release beta release to test PyPI'
        required: true
        type: boolean
        default: true

jobs:
  push_to_testpypi:
    name: Upload release to test PyPI
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test == 'true' && github.event.inputs.version != '0.1.x' && contains(github.event.inputs.version, 'b') }}
    environment:
      name: testpypi
      url: https://test.pypi.org/p/hirundo
    permissions:
      contents: write  # Used to push branch with release
      pull-requests: write  # Used to create and merge PR with release
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.ref }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: 'pip'
      - name: Bump version with `bumpver` then push tag
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          source .venv/bin/activate
          pip install bumpver
          git config user.name "GitHub Actions [release-bot]"
          git config user.email "devs@hirundo.io"
          git checkout -b release-${{ github.event.inputs.version }}
          bumpver update --set-version ${{ github.event.inputs.version }} --commit --push
          git push -u origin release-${{ github.event.inputs.version }}
          gh pr create -a ${{ github.event.sender }} --title "v${{ github.event.inputs.version }} release" --body "${{ github.event.inputs.message }}"
          gh pr merge --auto --delete-branch --squash "release-${{ github.event.inputs.version }}"
          git checkout ${{ github.event.ref }}
          git pull origin ${{ github.event.ref }}
          git tag -a v${{ github.event.inputs.version }} -m "${{ github.event.inputs.message }}"
          git push origin v${{ github.event.inputs.version }}
      - name: Install dependencies & build package
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          source .venv/bin/activate
          pip install -r dev-requirements.txt
          pip install build twine
          python -m build
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
      - name: Save version to artifact
        run: echo "${{ github.event.inputs.version }}" > version.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version.txt
  push_to_pypi:
    name: Upload release to PyPI
    if: ${{ github.event.inputs.test == 'false' && github.event.inputs.version != '0.1.x' && !contains(github.event.inputs.version, 'b') }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/hirundo
    permissions:
      contents: write  # Used to push branch with release
      pull-requests: write  # Used to create and merge PR with release
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.ref }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: 'pip'
      - name: Bump version with `bumpver` then push tag
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          source .venv/bin/activate
          pip install bumpver
          git config user.name "GitHub Actions [release-bot]"
          git config user.email "devs@hirundo.io"
          git checkout -b release-${{ github.event.inputs.version }}
          bumpver update --set-version ${{ github.event.inputs.version }} --commit --push
          git push -u origin release-${{ github.event.inputs.version }}
          gh pr create -a ${{ github.event.sender }} --title "v${{ github.event.inputs.version }} release" --body "${{ github.event.inputs.message }}"
          gh pr merge --auto --delete-branch --squash "release-${{ github.event.inputs.version }}"
          git checkout ${{ github.event.ref }}
          git pull origin ${{ github.event.ref }}
          git tag -a v${{ github.event.inputs.version }} -m "${{ github.event.inputs.message }}"
          git push origin v${{ github.event.inputs.version }}
      - name: Install dependencies & build package
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          source .venv/bin/activate
          pip install -r dev-requirements.txt
          pip install build twine
          python -m build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Save version to artifact
        run: echo "${{ github.event.inputs.version }}" > version.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version.txt
