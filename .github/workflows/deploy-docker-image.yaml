name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v0.*.0+on-prem'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Permission can be added at job level or workflow level
permissions:
  contents: read # This is required for actions/checkout
  packages: write # This is required for pushing to GitHub Container Registry

jobs:
  build-and-push:
      runs-on: ubuntu-latest

      steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          platforms: linux/amd64
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta configuration for `hirundo-client` image
        id: client-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/hirundo-io/hirundo-client,enable=true
          tags: |
            type=match,pattern=v(.*)+on-prem,group=1,suffix=on-prem,enable=${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && endsWith(github.ref, '+on-prem') }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=min,compression=zstd
          file: jupyter.Dockerfile
          pull: true
          outputs: |
            type=image,compression=zstd,push=true
            type=docker,dest=hirundo-client.tar
          tags: ${{ steps.client-meta.outputs.tags }}
          labels: ${{ steps.client-meta.outputs.labels }}
          platforms: linux/amd64
      - uses: actions/cache@v4
        with:
          path: .trivy
          key: ${{ runner.os }}-trivy-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-trivy-
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.26.0
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
        with:
          input: hirundo-client.tar
          trivy-config: trivy.yaml
          severity: HIGH,CRITICAL  # https://github.com/aquasecurity/trivy-action/issues/342
          cache-dir: .trivy
          timeout: 10m0s
      - name: Correct Trivy cache permissions
        run: sudo mkdir -p .trivy && sudo chown -R $USER:$GROUP .trivy
