name: Run all tests with PyTest

on:
  push:
    tags:
      - "v*"

jobs:
  pytest_full:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      max-parallel: 2
      matrix:
        data-qa-test:
          - test: classification/classification_aws_test.py
            env: RUN_CLASSIFICATION_AWS_DATA_QA
          - test: classification/classification_gcp_test.py
            env: RUN_CLASSIFICATION_GCP_DATA_QA
          - test: classification/sanity_gcp_test.py
            env: RUN_CLASSIFICATION_GCP_SANITY_DATA_QA
          - test: object-detection/od_aws_test.py
            env: RUN_AWS_OD_DATA_QA
          - test: object-detection/od_git_test.py
            env: RUN_OD_GIT_DATA_QA
          - test: tests/object-detection/sama_coco_test.py
            env: RUN_COCO_OD_GCP_SANITY_DATA_QA
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: 'pip'
      - name: Install dependencies on Linux and macOS
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements/dev.txt -r requirements/polars.txt
      - name: Run PyTest
        run: .venv/bin/pytest tests/${{ matrix.data-qa-test['test'] }}
        env:
          API_HOST: ${{ secrets.API_HOST }}
          API_KEY: ${{ secrets.API_KEY }}
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          HUGGINGFACE_ACCESS_TOKEN: ${{ secrets.HUGGINGFACE_ACCESS_TOKEN }}
          UNIQUE_ID: ${{ github.ref }}-${{ github.run_number }}
          ${{ matrix.data-qa-test['env'] }}: true
